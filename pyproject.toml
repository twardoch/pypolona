[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pypolona"
dynamic = ["version"] # Reverted to dynamic versioning
description = "Image downloader for the polona.pl website of the Polish National Library"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    { name = "Adam Twardoch", email = "adam+github@twardoch.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Environment :: MacOS X",
    "Environment :: Win32 (MS Windows)",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Multimedia :: Graphics :: Capture :: Screen Capture",
    "Topic :: Utilities",
]
dependencies = [
    "orderedattrdict>=1.6.0",
    "Gooey>=1.0.8",
    "ezgooey>=1.3.3",
    "colored>=1.4.2",
    "html2text>=2020.1.16",
    "yaplon>=1.2.4",
    "python-dateutil>=2.8.1",
    "img2pdf>=0.4.0",
    "pikepdf>=1.19.3", # Consider updating if possible, current is quite old
    "lxml>=4.5.2", # Consider updating
    "lxml2json>=0.2.6",
    "requests", # Added, was missing from requirements.txt but used in code
    "pywin32>=228; sys_platform == 'win32'",
]

keywords = ["polona", "jpeg", "downloader", "cli", "gui", "archive", "library", "national library of poland"]

[project.urls]
Homepage = "https://twardoch.github.io/pypolona/"
"Source Code" = "https://github.com/twardoch/pypolona"
"Bug Tracker" = "https://github.com/twardoch/pypolona/issues"

[project.scripts]
ppolona = "pypolona.__main__:main"

[project.gui-scripts]
pypolona-gui = "pypolona.__main__:main" # Assuming Gooey wraps the main CLI

[project.optional-dependencies]
dev = [
    "ruff",
    "mypy",
    "pytest",
    "pytest-cov",
    "pre-commit",
    "twine>=3.4.1",
    "pyinstaller>=4.2", # Keep for building executables
    "dmgbuild>=1.4.2; sys_platform == 'darwin'", # Keep for building DMG
]

[tool.hatch.version] # Restored
source = "vcs"

[tool.hatch.version.raw-options] # Restored
version_scheme = "semver"
local_scheme = "no-local-version"

[tool.hatch.scripts]
# Clean build artifacts
clean = "hatch build --clean"
# Build sdist and wheel
build = "hatch build -t sdist -t wheel"
# Alias for build that also cleans first
build-clean = [
  "clean",
  "build",
]
# Check package metadata and structure
check = "hatch build --check" # Might not be a valid hatch command, twine check is more common
# Publish to PyPI (or other configured repo)
# User needs to configure repositories in ~/.config/hatch/config.toml or use HATCH_INDEX_REPO, HATCH_INDEX_USER, HATCH_INDEX_AUTH
publish = "hatch publish"
# A script to run twine check (more robust for pre-publish checks)
twine-check = "twine check dist/*"


[tool.hatch.build.targets.sdist]
include = ["/pypolona", "/README.md", "/LICENSE"]

[tool.hatch.build.targets.wheel]
packages = ["pypolona"]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "W", "I", "UP", "PL", "TID", "RUF"] # Enabled isort, pylint, flake8-tidy-imports, ruff specific rules
ignore = ["E501"] # Handled by formatter

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true # Start with this and reduce as stubs are added/found
# Add more specific paths if needed, e.g. mypy pypolona
# check_untyped_defs = true # Enable for stricter checking later
# disallow_untyped_defs = true # Enable for even stricter checking later

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=pypolona --cov-report=term-missing"
testpaths = [
    "tests",
]
